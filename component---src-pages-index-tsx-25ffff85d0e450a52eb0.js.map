{"version":3,"sources":["webpack:///./src/components/Resource/Resource.tsx","webpack:///./src/components/Masthead/Masthead.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/Tag/Tag.tsx"],"names":["Resource","props","author","content","image","tags","title","url","imagePadding","padding","className","href","src","alt","dangerouslySetInnerHTML","__html","length","map","tag","index","key","Tag","name","Masthead","children","IndexPage","data","featured","article","podcast","tool","example","allMarkdownRemark","edges","totalCount","edge","node","frontmatter","html","type","push","to","pageQuery","active","onClick","classes"],"mappings":"oKAaaA,EAAW,SAACC,GAAiB,IAElCC,EAOAD,EAPAC,OACAC,EAMAF,EANAE,QACAC,EAKAH,EALAG,MACAC,EAIAJ,EAJAI,KACAC,EAGAL,EAHAK,MACAC,EAEAN,EAFAM,IAIEC,EAFFP,EADAQ,QAG2B,MAAQ,GAEvC,OACI,yBAAKC,UAAU,+EACX,yBAAKA,UAAU,wBACVN,GACG,uBAAGO,KAAMJ,GACL,yBACIG,UAAS,UAAYF,EACrBI,IAAKR,EACLS,IAAKP,KAIjB,yBAAKI,UAAU,mEACVR,GACG,yBAAKQ,UAAU,qEACVR,GAGT,yBAAKQ,UAAU,UACX,uBAAGC,KAAMJ,EAAKG,UAAU,sDACnBJ,GAEJH,GACG,yBAAKO,UAAU,OAAOI,wBAAyB,CAAEC,OAAQZ,MAIhEE,GAAQA,EAAKW,OAAS,GACnB,yBAAKN,UAAU,wCACVL,EAAKY,KAAI,SAACC,EAAKC,GAAN,OACN,yBACIC,IAAKD,EACLT,UAAU,qBAEV,kBAACW,EAAA,EAAD,CAAKC,KAAMJ,c,6FCtDlCK,EAAW,SAACtB,GAAD,OACpB,yBAAKS,UAAU,yFACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,0CACVT,EAAMuB,c,kCCVvB,sIAyFeC,UAjFG,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACbC,EAKF,CACFC,QAAS,GACTC,QAAS,GACTC,KAAM,GACNC,QAAS,IAVmB,EAaAL,EAAKM,kBAA3BC,EAbsB,EAatBA,MAbsB,EAafC,WA8Bf,OAjBAD,EAAMhB,KAAI,SAACkB,EAAMhB,GAAU,MACgDgB,EAAKC,KAAtEC,EADiB,EACjBA,YAAaC,EADI,EACJA,KAChBD,EAAYV,UACjBA,EAASU,EAAYE,MAAMC,KACzB,yBAAK9B,UAAU,UAAUU,IAAKD,GAC5B,kBAAC,IAAD,CACEb,MAAO+B,EAAY/B,MACnBD,KAAMgC,EAAYhC,KAClBE,IAAK8B,EAAY9B,IACjBH,MAAOiC,EAAYjC,MACnBF,OAAQmC,EAAYnC,OACpBC,QAASmC,SAOf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKhC,MAAM,wBACX,kBAAC,IAAD,kCAC4B,kBAAC,OAAD,CAAMmC,GAAG,YAAY/B,UAAU,aAA/B,YAD5B,KACwF,kBAAC,OAAD,CAAM+B,GAAG,SAAS/B,UAAU,aAA5B,SADxF,KAC8I,kBAAC,OAAD,CAAM+B,GAAG,YAAY/B,UAAU,aAA/B,YAD9I,KAC0M,kBAAC,OAAD,CAAM+B,GAAG,UAAU/B,UAAU,aAA7B,UAD1M,eAC4Q,kBAAC,OAAD,CAAM+B,GAAG,YAAY/B,UAAU,gCAA/B,YAE5Q,yBAAKA,UAAU,OACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,qCAAd,qBACA,yBAAKA,UAAU,wDACZiB,EAASC,UAGd,yBAAKlB,UAAU,QACb,wBAAIA,UAAU,mDAAd,kBACA,yBAAKA,UAAU,wDACZiB,EAASG,OAGd,yBAAKpB,UAAU,QACb,wBAAIA,UAAU,mDAAd,qBACA,yBAAKA,UAAU,wDACZiB,EAASI,UAGd,yBAAKrB,UAAU,QACb,wBAAIA,UAAU,mDAAd,oBACA,yBAAKA,UAAU,wDACZiB,EAASE,cAWjB,IAAMa,EAAY,c,uGCnFZrB,EAAM,SAAC,GAIP,QAHTsB,cAGS,SAFTrB,EAES,EAFTA,KACAsB,EACS,EADTA,QAGIC,EAAU,sEAYd,OATIA,GADAF,EACW,gCAEA,gCAGXC,IACAC,GAAW,mBAIX,0BACInC,UAAWmC,EACXD,QAASA,GAERtB","file":"component---src-pages-index-tsx-25ffff85d0e450a52eb0.js","sourcesContent":["import React from 'react';\nimport Tag from '../Tag';\n\ninterface Props {\n    title?: string,\n    url?: string,\n    content?: string\n    tags?: string[]\n    image?: string\n    author?: string\n    padding?: number\n}\n\nexport const Resource = (props: Props) => {\n    const {\n        author,\n        content,\n        image,\n        tags,\n        title,\n        url,\n        padding\n    } = props;\n\n    const imagePadding = padding ? 'p-4' : '';\n\n    return (\n        <div className=\"w-full max-w-md rounded overflow-hidden shadow bg-gray-100 dark:bg-gray-700\">\n            <div className=\"flex flex-col h-full\">\n                {image &&\n                    <a href={url}>\n                        <img\n                            className={`w-full ${imagePadding}`}\n                            src={image} \n                            alt={title}\n                        />\n                    </a>\n                }\n                <div className=\"text-gray-800 dark:text-gray-200 flex flex-col h-full px-4 py-2\">\n                    {author &&\n                        <div className=\"text-gray-700 dark:text-gray-400 uppercase text-xs mb-4 font-mono\">\n                            {author}\n                        </div>\n                    }\n                    <div className=\"flex-1\">\n                        <a href={url} className=\"font-bold text-xl mb-4 block visited:text-gray-500\">\n                            {title}\n                        </a>\n                        {content && \n                            <div className=\"mb-8\" dangerouslySetInnerHTML={{ __html: content}} />\n                        }\n                    </div>\n\n                    {tags && tags.length > 0 &&\n                        <div className=\"flex items-end align-start flex-wrap\">\n                            {tags.map((tag, index) => (\n                                <div\n                                    key={index}\n                                    className=\"inline-block mr-2\"\n                                >\n                                    <Tag name={tag} />\n                                </div>\n                            ))}\n                        </div>\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\n\ninterface Props {\n    children: React.ReactNode\n}\n\nexport const Masthead = (props: Props) => (\n    <div className=\"bg-gray-100 dark:bg-gray-900 border-b border-gray-300 dark:border-gray-900 px-4 py-12\">\n        <div className=\"max-w-screen-xl mx-auto\">\n            <div className=\"dark:text-white text-xl md:text-center\">\n                {props.children}\n            </div>\n        </div>\n    </div>\n)","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Link, graphql } from \"gatsby\"\nimport Resource from \"../components/Resource\"\nimport Masthead from \"../components/Masthead\"\n\nconst IndexPage = ({ data }) => {\n  const featured: {\n    article: JSX.Element[],\n    podcast: JSX.Element[],\n    tool: JSX.Element[],\n    example: JSX.Element[]\n  } = {\n    article: [],\n    podcast: [],\n    tool: [],\n    example: []\n  };\n\n  const { edges, totalCount } = data.allMarkdownRemark;\n\n  interface FrontMatter {\n    type: 'article' | 'podcast' | 'tool' | 'example',\n    title: string,\n    tags: string[]\n    featured?: boolean\n    url: string\n    image?: string\n    author?: string\n    content?: string\n  }\n\n  edges.map((edge, index) => {\n    const { frontmatter, html }: { frontmatter: FrontMatter, html: string} = edge.node;\n    if (!frontmatter.featured) return;\n    featured[frontmatter.type].push(\n      <div className=\"md:flex\" key={index}>\n        <Resource\n          title={frontmatter.title}\n          tags={frontmatter.tags}\n          url={frontmatter.url}\n          image={frontmatter.image}\n          author={frontmatter.author}\n          content={html}\n        />\n      </div>\n    )\n  });\n\n  return (\n    <Layout>\n      <SEO title=\"Dark Mode Resources\" />\n      <Masthead>\n        A collection of Dark Mode <Link to=\"/articles\" className=\"underline\">articles</Link>, <Link to=\"/tools\" className=\"underline\">tools</Link>, <Link to=\"/examples\" className=\"underline\">examples</Link>, <Link to=\"/tweets\" className=\"underline\">tweets</Link> and even a <Link to=\"/podcasts\" className=\"underline whitespace-no-wrap\">podcast</Link>\n      </Masthead>\n      <div className=\"p-4\">\n        <div className=\"max-w-screen-xl mx-auto\">\n          <div className=\"mb-4\">\n            <h2 className=\"font-bold mb-4 dark:text-gray-100\">Featured Articles</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n              {featured.article}\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <h2 className=\"font-bold mb-4 text-gray-800 dark:text-gray-100\">Featured Tools</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n              {featured.tool}\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <h2 className=\"font-bold mb-4 text-gray-800 dark:text-gray-100\">Featured Examples</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n              {featured.example}\n            </div>\n          </div>\n          <div className=\"mb-4\">\n            <h2 className=\"font-bold mb-4 text-gray-800 dark:text-gray-100\">Featured Podcast</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n              {featured.podcast}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n    query {\n        allMarkdownRemark {\n          totalCount\n            edges{ \n                node {\n                    id\n                    html\n                    frontmatter {\n                        title\n                        type\n                        tags\n                        featured\n                        url\n                        image\n                        author\n                    }\n                }\n            }\n        }\n    }\n`","import React from 'react';\n\ninterface Props {\n    active?: boolean,\n    name: string,\n    onClick?: () => void\n}\n\nexport const Tag = ({\n    active = false,\n    name,\n    onClick\n}: Props) => {\n\n    let classes = `inline-block text-white rounded-md px-3 py-1 text-xs mb-1 font-mono`;\n\n    if (active) {\n        classes += ' bg-gray-700 dark:bg-gray-900';\n    } else {\n        classes += ' bg-gray-600 dark:bg-gray-600'\n    }\n\n    if (onClick) {\n        classes += ' cursor-pointer'\n    }\n\n    return (\n        <span\n            className={classes}\n            onClick={onClick}\n        >\n            {name}\n        </span>\n    );\n}"],"sourceRoot":""}